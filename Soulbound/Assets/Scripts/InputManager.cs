using UnityEngine;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Controls;

[DefaultExecutionOrder(-110)]
public class InputManager : MonoBehaviour
{
    public static InputManager Instance { get; private set; }

    //======================================
    // PUBLIC PROPERTIES
    // (accessed by external scripts)
    //======================================

    [HideInInspector] public Vector2 moveInput;

    //=====================================================
    // STATE
    //=====================================================

    // Bool used to keep input in sync between Update() and FixedUpdate()
    private bool readyToClear;

    // Input actions wrapper (generated by Unity Input System Asset)
    public static InputMaster controls;

    //=====================================================
    // METHODS
    //=====================================================

    private void Awake()
    {
        if (Instance == null)
        {
            Instance = this;
            DontDestroyOnLoad(gameObject);
        } else
        {
            Destroy(gameObject);
        }

        controls = new InputMaster();

        controls.Player.Move.performed += ctx => moveInput = ctx.ReadValue<Vector2>();
        controls.Player.Move.canceled += ctx => moveInput = Vector2.zero;
    }


    private void OnEnable()
    {
        controls.Enable();
    }

    private void OnDisable()
    {
        controls.Disable();
    }

}
